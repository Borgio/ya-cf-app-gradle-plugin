version = "1.0.10-SNAPSHOT"
group = "com.github.pivotalservices"

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

buildscript {
    repositories {
        mavenCentral()
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    maven { url "https://repo.spring.io/release" }
}
buildscript {
	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath "com.gradle.publish:plugin-publish-plugin:0.9.7"
	}
}

apply plugin: "com.gradle.plugin-publish"

dependencies {
    compile gradleApi()
    compile("org.cloudfoundry:cloudfoundry-client-reactor:$cfClientVersion")
    compile("org.cloudfoundry:cloudfoundry-operations:$cfClientVersion")
    testCompile('org.assertj:assertj-core:3.4.1')
    testCompile('org.mockito:mockito-core:1.10.19')
    testCompile('junit:junit:4.12')
    compileOnly("org.immutables:value:2.3.7")
    testCompile("io.projectreactor.addons:reactor-test:3.0.7.RELEASE")
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}


test {
    useJUnit {
        excludeCategories 'io.pivotal.services.plugin.IntegrationTest'
    }
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name project.name
                packaging 'jar'
                description 'Gradle Plugin to push an application to Cloud Foundry'
                url 'https://github.com/pivotalservices/ya-cf-app-gradle-plugin'

                scm {
                    connection 'scm:git:https://github.com/pivotalservices/ya-cf-app-gradle-plugin'
                    developerConnection 'scm:git:https://github.com/pivotalservices/ya-cf-app-gradle-plugin'
                    url 'https://github.com/pivotalservices/ya-cf-app-gradle-plugin'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'bijukunjummen'
                        name 'Biju Kunjummen'
                        email 'biju.kunjummen@gmail.com'
                    }
                }
            }
        }
    }
}

pluginBundle {
	website = 'https://github.com/pivotalservices/ya-cf-app-gradle-plugin'
	vcsUrl = 'https://github.com/pivotalservices/ya-cf-app-gradle-plugin'
	description = 'Yet-Another-Gradle Plugin is an alternate plugin to facilitate deploying an app to Cloud Foundry'
	tags = ['cloudfoundry', 'cloud foundry']

	plugins {
		yaCfAppGradlePlugin {
			id = 'com.github.pivotalservices.cf-app'
			displayName = 'Gradle Cloud Foundry Plugin - Yet Another'
		}
	}
}
